%main = fn(%serving_default_input_1:0: f32[?,128,128,1]): // (f32[?,128,128,1]) -> f32[?,?,?,1]
{
  %0 = Transpose(%serving_default_input_1:0, const(i32[4] : {0,3,1,2})): // f32[?,1,128,128]
  %1 = ShapeOf(%0): // i64[4]
  %2 = GetPaddings(%1, const(i64[4] : {16L,1L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %3 = Conv2D(PadMode.Constant, %0, const(f32[16,1,3,3]), const(f32[16]), const(i32[2] : {1,1}), %2, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,16,?,?]
  %4 = LeakyRelu(%3, const(f32 : 0.3)): // f32[?,16,?,?]
  %5 = ShapeOf(%4): // i64[4]
  %6 = GetPaddings(%5, const(i64[4] : {16L,16L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %7 = Conv2D(PadMode.Constant, %4, const(f32[16,16,3,3]), const(f32[16]), const(i32[2] : {1,1}), %6, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,16,?,?]
  %8 = LeakyRelu(%7, const(f32 : 0.3)): // f32[?,16,?,?]
  %9 = ShapeOf(%8): // i64[4]
  %10 = Slice(%9, const(i32[1] : {2}), const(i32[1] : {3}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %11 = Reshape(%10, const(i32[0])): // i64
  %12 = Cast(DataTypes.Int32, CastMode.KDefault, %11): // i32
  %13 = Sub(BinaryOp.Sub, %12, const(i32 : 2)): // i32
  %14 = Add(BinaryOp.Add, %13, const(i32 : 2)): // i32
  %15 = Div(BinaryOp.Div, %14, const(i32 : 2)): // i32
  %16 = Sub(BinaryOp.Sub, %15, const(i32 : 1)): // i32
  %17 = Mul(BinaryOp.Mul, %16, const(i32 : 2)): // i32
  %18 = Add(BinaryOp.Add, %17, const(i32 : 2)): // i32
  %19 = Sub(BinaryOp.Sub, %18, %12): // i32
  %20 = Max(BinaryOp.Max, const(i32 : 0), %19): // i32
  %21 = Div(BinaryOp.Div, %20, const(i32 : 2)): // i32
  %22 = Sub(BinaryOp.Sub, %20, %21): // i32
  %23 = (%21, %22): // (i32, i32)
  
  %24 = Stack(%23, const(i32 : 0)): // i32[2]
  %25 = Slice(%9, const(i32[1] : {3}), const(i32[1] : {4}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %26 = Reshape(%25, const(i32[0])): // i64
  %27 = Cast(DataTypes.Int32, CastMode.KDefault, %26): // i32
  %28 = Sub(BinaryOp.Sub, %27, const(i32 : 2)): // i32
  %29 = Add(BinaryOp.Add, %28, const(i32 : 2)): // i32
  %30 = Div(BinaryOp.Div, %29, const(i32 : 2)): // i32
  %31 = Sub(BinaryOp.Sub, %30, const(i32 : 1)): // i32
  %32 = Mul(BinaryOp.Mul, %31, const(i32 : 2)): // i32
  %33 = Add(BinaryOp.Add, %32, const(i32 : 2)): // i32
  %34 = Sub(BinaryOp.Sub, %33, %27): // i32
  %35 = Max(BinaryOp.Max, const(i32 : 0), %34): // i32
  %36 = Div(BinaryOp.Div, %35, const(i32 : 2)): // i32
  %37 = Sub(BinaryOp.Sub, %35, %36): // i32
  %38 = (%36, %37): // (i32, i32)
  
  %39 = Stack(%38, const(i32 : 0)): // i32[2]
  %40 = (%24, %39): // (i32[2], i32[2])
  
  %41 = Stack(%40, const(i32 : 0)): // i32[2,2]
  %42 = ReduceWindow2D(ReduceOp.Max, %8, const(f32 : -3.4028235E+38), const(i32[2] : {2,2}), const(i32[2] : {2,2}), %41, const(i64[2] : {1L,1L}), const(bool : False), const(bool : False)): // f32[?,?,?,?]
  %43 = ShapeOf(%42): // i64[4]
  %44 = GetPaddings(%43, const(i64[4] : {32L,16L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %45 = Conv2D(PadMode.Constant, %42, const(f32[32,16,3,3]), const(f32[32]), const(i32[2] : {1,1}), %44, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,32,?,?]
  %46 = LeakyRelu(%45, const(f32 : 0.3)): // f32[?,32,?,?]
  %47 = ShapeOf(%46): // i64[4]
  %48 = GetPaddings(%47, const(i64[4] : {32L,32L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %49 = Conv2D(PadMode.Constant, %46, const(f32[32,32,3,3]), const(f32[32]), const(i32[2] : {1,1}), %48, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,32,?,?]
  %50 = LeakyRelu(%49, const(f32 : 0.3)): // f32[?,32,?,?]
  %51 = ShapeOf(%50): // i64[4]
  %52 = Slice(%51, const(i32[1] : {2}), const(i32[1] : {3}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %53 = Reshape(%52, const(i32[0])): // i64
  %54 = Cast(DataTypes.Int32, CastMode.KDefault, %53): // i32
  %55 = Sub(BinaryOp.Sub, %54, const(i32 : 2)): // i32
  %56 = Add(BinaryOp.Add, %55, const(i32 : 2)): // i32
  %57 = Div(BinaryOp.Div, %56, const(i32 : 2)): // i32
  %58 = Sub(BinaryOp.Sub, %57, const(i32 : 1)): // i32
  %59 = Mul(BinaryOp.Mul, %58, const(i32 : 2)): // i32
  %60 = Add(BinaryOp.Add, %59, const(i32 : 2)): // i32
  %61 = Sub(BinaryOp.Sub, %60, %54): // i32
  %62 = Max(BinaryOp.Max, const(i32 : 0), %61): // i32
  %63 = Div(BinaryOp.Div, %62, const(i32 : 2)): // i32
  %64 = Sub(BinaryOp.Sub, %62, %63): // i32
  %65 = (%63, %64): // (i32, i32)
  
  %66 = Stack(%65, const(i32 : 0)): // i32[2]
  %67 = Slice(%51, const(i32[1] : {3}), const(i32[1] : {4}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %68 = Reshape(%67, const(i32[0])): // i64
  %69 = Cast(DataTypes.Int32, CastMode.KDefault, %68): // i32
  %70 = Sub(BinaryOp.Sub, %69, const(i32 : 2)): // i32
  %71 = Add(BinaryOp.Add, %70, const(i32 : 2)): // i32
  %72 = Div(BinaryOp.Div, %71, const(i32 : 2)): // i32
  %73 = Sub(BinaryOp.Sub, %72, const(i32 : 1)): // i32
  %74 = Mul(BinaryOp.Mul, %73, const(i32 : 2)): // i32
  %75 = Add(BinaryOp.Add, %74, const(i32 : 2)): // i32
  %76 = Sub(BinaryOp.Sub, %75, %69): // i32
  %77 = Max(BinaryOp.Max, const(i32 : 0), %76): // i32
  %78 = Div(BinaryOp.Div, %77, const(i32 : 2)): // i32
  %79 = Sub(BinaryOp.Sub, %77, %78): // i32
  %80 = (%78, %79): // (i32, i32)
  
  %81 = Stack(%80, const(i32 : 0)): // i32[2]
  %82 = (%66, %81): // (i32[2], i32[2])
  
  %83 = Stack(%82, const(i32 : 0)): // i32[2,2]
  %84 = ReduceWindow2D(ReduceOp.Max, %50, const(f32 : -3.4028235E+38), const(i32[2] : {2,2}), const(i32[2] : {2,2}), %83, const(i64[2] : {1L,1L}), const(bool : False), const(bool : False)): // f32[?,?,?,?]
  %85 = ShapeOf(%84): // i64[4]
  %86 = GetPaddings(%85, const(i64[4] : {64L,32L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %87 = Conv2D(PadMode.Constant, %84, const(f32[64,32,3,3]), const(f32[64]), const(i32[2] : {1,1}), %86, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,64,?,?]
  %88 = LeakyRelu(%87, const(f32 : 0.3)): // f32[?,64,?,?]
  %89 = ShapeOf(%88): // i64[4]
  %90 = GetPaddings(%89, const(i64[4] : {64L,64L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %91 = Conv2D(PadMode.Constant, %88, const(f32[64,64,3,3]), const(f32[64]), const(i32[2] : {1,1}), %90, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,64,?,?]
  %92 = LeakyRelu(%91, const(f32 : 0.3)): // f32[?,64,?,?]
  %93 = ShapeOf(%92): // i64[4]
  %94 = Slice(%93, const(i32[1] : {2}), const(i32[1] : {3}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %95 = Reshape(%94, const(i32[0])): // i64
  %96 = Cast(DataTypes.Int32, CastMode.KDefault, %95): // i32
  %97 = Sub(BinaryOp.Sub, %96, const(i32 : 2)): // i32
  %98 = Add(BinaryOp.Add, %97, const(i32 : 2)): // i32
  %99 = Div(BinaryOp.Div, %98, const(i32 : 2)): // i32
  %100 = Sub(BinaryOp.Sub, %99, const(i32 : 1)): // i32
  %101 = Mul(BinaryOp.Mul, %100, const(i32 : 2)): // i32
  %102 = Add(BinaryOp.Add, %101, const(i32 : 2)): // i32
  %103 = Sub(BinaryOp.Sub, %102, %96): // i32
  %104 = Max(BinaryOp.Max, const(i32 : 0), %103): // i32
  %105 = Div(BinaryOp.Div, %104, const(i32 : 2)): // i32
  %106 = Sub(BinaryOp.Sub, %104, %105): // i32
  %107 = (%105, %106): // (i32, i32)
  
  %108 = Stack(%107, const(i32 : 0)): // i32[2]
  %109 = Slice(%93, const(i32[1] : {3}), const(i32[1] : {4}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %110 = Reshape(%109, const(i32[0])): // i64
  %111 = Cast(DataTypes.Int32, CastMode.KDefault, %110): // i32
  %112 = Sub(BinaryOp.Sub, %111, const(i32 : 2)): // i32
  %113 = Add(BinaryOp.Add, %112, const(i32 : 2)): // i32
  %114 = Div(BinaryOp.Div, %113, const(i32 : 2)): // i32
  %115 = Sub(BinaryOp.Sub, %114, const(i32 : 1)): // i32
  %116 = Mul(BinaryOp.Mul, %115, const(i32 : 2)): // i32
  %117 = Add(BinaryOp.Add, %116, const(i32 : 2)): // i32
  %118 = Sub(BinaryOp.Sub, %117, %111): // i32
  %119 = Max(BinaryOp.Max, const(i32 : 0), %118): // i32
  %120 = Div(BinaryOp.Div, %119, const(i32 : 2)): // i32
  %121 = Sub(BinaryOp.Sub, %119, %120): // i32
  %122 = (%120, %121): // (i32, i32)
  
  %123 = Stack(%122, const(i32 : 0)): // i32[2]
  %124 = (%108, %123): // (i32[2], i32[2])
  
  %125 = Stack(%124, const(i32 : 0)): // i32[2,2]
  %126 = ReduceWindow2D(ReduceOp.Max, %92, const(f32 : -3.4028235E+38), const(i32[2] : {2,2}), const(i32[2] : {2,2}), %125, const(i64[2] : {1L,1L}), const(bool : False), const(bool : False)): // f32[?,?,?,?]
  %127 = ShapeOf(%126): // i64[4]
  %128 = GetPaddings(%127, const(i64[4] : {128L,64L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %129 = Conv2D(PadMode.Constant, %126, const(f32[128,64,3,3]), const(f32[128]), const(i32[2] : {1,1}), %128, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,128,?,?]
  %130 = LeakyRelu(%129, const(f32 : 0.3)): // f32[?,128,?,?]
  %131 = ShapeOf(%130): // i64[4]
  %132 = GetPaddings(%131, const(i64[4] : {128L,128L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %133 = Conv2D(PadMode.Constant, %130, const(f32[128,128,3,3]), const(f32[128]), const(i32[2] : {1,1}), %132, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,128,?,?]
  %134 = LeakyRelu(%133, const(f32 : 0.3)): // f32[?,128,?,?]
  %135 = ShapeOf(%134): // i64[4]
  %136 = Slice(%135, const(i32[1] : {2}), const(i32[1] : {3}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %137 = Reshape(%136, const(i32[0])): // i64
  %138 = Cast(DataTypes.Int32, CastMode.KDefault, %137): // i32
  %139 = Sub(BinaryOp.Sub, %138, const(i32 : 2)): // i32
  %140 = Add(BinaryOp.Add, %139, const(i32 : 2)): // i32
  %141 = Div(BinaryOp.Div, %140, const(i32 : 2)): // i32
  %142 = Sub(BinaryOp.Sub, %141, const(i32 : 1)): // i32
  %143 = Mul(BinaryOp.Mul, %142, const(i32 : 2)): // i32
  %144 = Add(BinaryOp.Add, %143, const(i32 : 2)): // i32
  %145 = Sub(BinaryOp.Sub, %144, %138): // i32
  %146 = Max(BinaryOp.Max, const(i32 : 0), %145): // i32
  %147 = Div(BinaryOp.Div, %146, const(i32 : 2)): // i32
  %148 = Sub(BinaryOp.Sub, %146, %147): // i32
  %149 = (%147, %148): // (i32, i32)
  
  %150 = Stack(%149, const(i32 : 0)): // i32[2]
  %151 = Slice(%135, const(i32[1] : {3}), const(i32[1] : {4}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %152 = Reshape(%151, const(i32[0])): // i64
  %153 = Cast(DataTypes.Int32, CastMode.KDefault, %152): // i32
  %154 = Sub(BinaryOp.Sub, %153, const(i32 : 2)): // i32
  %155 = Add(BinaryOp.Add, %154, const(i32 : 2)): // i32
  %156 = Div(BinaryOp.Div, %155, const(i32 : 2)): // i32
  %157 = Sub(BinaryOp.Sub, %156, const(i32 : 1)): // i32
  %158 = Mul(BinaryOp.Mul, %157, const(i32 : 2)): // i32
  %159 = Add(BinaryOp.Add, %158, const(i32 : 2)): // i32
  %160 = Sub(BinaryOp.Sub, %159, %153): // i32
  %161 = Max(BinaryOp.Max, const(i32 : 0), %160): // i32
  %162 = Div(BinaryOp.Div, %161, const(i32 : 2)): // i32
  %163 = Sub(BinaryOp.Sub, %161, %162): // i32
  %164 = (%162, %163): // (i32, i32)
  
  %165 = Stack(%164, const(i32 : 0)): // i32[2]
  %166 = (%150, %165): // (i32[2], i32[2])
  
  %167 = Stack(%166, const(i32 : 0)): // i32[2,2]
  %168 = ReduceWindow2D(ReduceOp.Max, %134, const(f32 : -3.4028235E+38), const(i32[2] : {2,2}), const(i32[2] : {2,2}), %167, const(i64[2] : {1L,1L}), const(bool : False), const(bool : False)): // f32[?,?,?,?]
  %169 = ShapeOf(%168): // i64[4]
  %170 = GetPaddings(%169, const(i64[4] : {256L,128L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %171 = Conv2D(PadMode.Constant, %168, const(f32[256,128,3,3]), const(f32[256]), const(i32[2] : {1,1}), %170, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,256,?,?]
  %172 = LeakyRelu(%171, const(f32 : 0.3)): // f32[?,256,?,?]
  %173 = ShapeOf(%172): // i64[4]
  %174 = GetPaddings(%173, const(i64[4] : {256L,256L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %175 = Conv2D(PadMode.Constant, %172, const(f32[256,256,3,3]), const(f32[256]), const(i32[2] : {1,1}), %174, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,256,?,?]
  %176 = LeakyRelu(%175, const(f32 : 0.3)): // f32[?,256,?,?]
  %177 = ShapeOf(%176): // i64[4]
  %178 = Slice(%177, const(i32[1] : {0}), const(i32[1] : {1}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %179 = Reshape(%178, const(i32[0])): // i64
  %180 = Slice(%177, const(i32[1] : {1}), const(i32[1] : {2}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %181 = Reshape(%180, const(i32[0])): // i64
  %182 = (%179, %181): // (i64, i64)
  
  %183 = Stack(%182, const(i32 : 0)): // i64[2]
  %184 = (%183, const(i64[2] : {16L,16L})): // (i64[2], i64[2])
  
  %185 = Concat(%184, const(i32 : 0)): // i64[4]
  %186 = ResizeImage(ImageResizeMode.NearestNeighbor, ImageResizeTransformationMode.HalfPixel, ImageResizeNearestMode.RoundPreferCeil, True, %176, const(f32[0]), %185, const(f32 : -0.75), const(bool : False), const(f32 : -0)): // f32[?,256,?,?]
  %187 = ShapeOf(%186): // i64[4]
  %188 = GetPaddings(%187, const(i64[4] : {128L,256L,2L,2L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %189 = Conv2D(PadMode.Constant, %186, const(f32[128,256,2,2]), const(f32[128]), const(i32[2] : {1,1}), %188, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,128,?,?]
  %190 = LeakyRelu(%189, const(f32 : 0.3)): // f32[?,128,?,?]
  %191 = (%134, %190): // (f32[?,128,?,?], f32[?,128,?,?])
  
  %192 = Concat(%191, const(i32 : 1)): // f32[?,256,?,?]
  %193 = ShapeOf(%192): // i64[4]
  %194 = GetPaddings(%193, const(i64[4] : {128L,256L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %195 = Conv2D(PadMode.Constant, %192, const(f32[128,256,3,3]), const(f32[128]), const(i32[2] : {1,1}), %194, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,128,?,?]
  %196 = LeakyRelu(%195, const(f32 : 0.3)): // f32[?,128,?,?]
  %197 = ShapeOf(%196): // i64[4]
  %198 = GetPaddings(%197, const(i64[4] : {128L,128L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %199 = Conv2D(PadMode.Constant, %196, const(f32[128,128,3,3]), const(f32[128]), const(i32[2] : {1,1}), %198, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,128,?,?]
  %200 = LeakyRelu(%199, const(f32 : 0.3)): // f32[?,128,?,?]
  %201 = ShapeOf(%200): // i64[4]
  %202 = Slice(%201, const(i32[1] : {0}), const(i32[1] : {1}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %203 = Reshape(%202, const(i32[0])): // i64
  %204 = Slice(%201, const(i32[1] : {1}), const(i32[1] : {2}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %205 = Reshape(%204, const(i32[0])): // i64
  %206 = (%203, %205): // (i64, i64)
  
  %207 = Stack(%206, const(i32 : 0)): // i64[2]
  %208 = (%207, const(i64[2] : {32L,32L})): // (i64[2], i64[2])
  
  %209 = Concat(%208, const(i32 : 0)): // i64[4]
  %210 = ResizeImage(ImageResizeMode.NearestNeighbor, ImageResizeTransformationMode.HalfPixel, ImageResizeNearestMode.RoundPreferCeil, True, %200, const(f32[0]), %209, const(f32 : -0.75), const(bool : False), const(f32 : -0)): // f32[?,128,?,?]
  %211 = ShapeOf(%210): // i64[4]
  %212 = GetPaddings(%211, const(i64[4] : {64L,128L,2L,2L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %213 = Conv2D(PadMode.Constant, %210, const(f32[64,128,2,2]), const(f32[64]), const(i32[2] : {1,1}), %212, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,64,?,?]
  %214 = LeakyRelu(%213, const(f32 : 0.3)): // f32[?,64,?,?]
  %215 = (%92, %214): // (f32[?,64,?,?], f32[?,64,?,?])
  
  %216 = Concat(%215, const(i32 : 1)): // f32[?,128,?,?]
  %217 = ShapeOf(%216): // i64[4]
  %218 = GetPaddings(%217, const(i64[4] : {64L,128L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %219 = Conv2D(PadMode.Constant, %216, const(f32[64,128,3,3]), const(f32[64]), const(i32[2] : {1,1}), %218, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,64,?,?]
  %220 = LeakyRelu(%219, const(f32 : 0.3)): // f32[?,64,?,?]
  %221 = ShapeOf(%220): // i64[4]
  %222 = GetPaddings(%221, const(i64[4] : {64L,64L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %223 = Conv2D(PadMode.Constant, %220, const(f32[64,64,3,3]), const(f32[64]), const(i32[2] : {1,1}), %222, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,64,?,?]
  %224 = LeakyRelu(%223, const(f32 : 0.3)): // f32[?,64,?,?]
  %225 = ShapeOf(%224): // i64[4]
  %226 = Slice(%225, const(i32[1] : {0}), const(i32[1] : {1}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %227 = Reshape(%226, const(i32[0])): // i64
  %228 = Slice(%225, const(i32[1] : {1}), const(i32[1] : {2}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %229 = Reshape(%228, const(i32[0])): // i64
  %230 = (%227, %229): // (i64, i64)
  
  %231 = Stack(%230, const(i32 : 0)): // i64[2]
  %232 = (%231, const(i64[2] : {64L,64L})): // (i64[2], i64[2])
  
  %233 = Concat(%232, const(i32 : 0)): // i64[4]
  %234 = ResizeImage(ImageResizeMode.NearestNeighbor, ImageResizeTransformationMode.HalfPixel, ImageResizeNearestMode.RoundPreferCeil, True, %224, const(f32[0]), %233, const(f32 : -0.75), const(bool : False), const(f32 : -0)): // f32[?,64,?,?]
  %235 = ShapeOf(%234): // i64[4]
  %236 = GetPaddings(%235, const(i64[4] : {32L,64L,2L,2L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %237 = Conv2D(PadMode.Constant, %234, const(f32[32,64,2,2]), const(f32[32]), const(i32[2] : {1,1}), %236, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,32,?,?]
  %238 = LeakyRelu(%237, const(f32 : 0.3)): // f32[?,32,?,?]
  %239 = (%50, %238): // (f32[?,32,?,?], f32[?,32,?,?])
  
  %240 = Concat(%239, const(i32 : 1)): // f32[?,64,?,?]
  %241 = ShapeOf(%240): // i64[4]
  %242 = GetPaddings(%241, const(i64[4] : {32L,64L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %243 = Conv2D(PadMode.Constant, %240, const(f32[32,64,3,3]), const(f32[32]), const(i32[2] : {1,1}), %242, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,32,?,?]
  %244 = LeakyRelu(%243, const(f32 : 0.3)): // f32[?,32,?,?]
  %245 = ShapeOf(%244): // i64[4]
  %246 = GetPaddings(%245, const(i64[4] : {32L,32L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %247 = Conv2D(PadMode.Constant, %244, const(f32[32,32,3,3]), const(f32[32]), const(i32[2] : {1,1}), %246, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,32,?,?]
  %248 = LeakyRelu(%247, const(f32 : 0.3)): // f32[?,32,?,?]
  %249 = ShapeOf(%248): // i64[4]
  %250 = Slice(%249, const(i32[1] : {0}), const(i32[1] : {1}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %251 = Reshape(%250, const(i32[0])): // i64
  %252 = Slice(%249, const(i32[1] : {1}), const(i32[1] : {2}), const(i32[1] : {0}), const(i32[1] : {1})): // i64[1]
  %253 = Reshape(%252, const(i32[0])): // i64
  %254 = (%251, %253): // (i64, i64)
  
  %255 = Stack(%254, const(i32 : 0)): // i64[2]
  %256 = (%255, const(i64[2] : {128L,128L})): // (i64[2], i64[2])
  
  %257 = Concat(%256, const(i32 : 0)): // i64[4]
  %258 = ResizeImage(ImageResizeMode.NearestNeighbor, ImageResizeTransformationMode.HalfPixel, ImageResizeNearestMode.RoundPreferCeil, True, %248, const(f32[0]), %257, const(f32 : -0.75), const(bool : False), const(f32 : -0)): // f32[?,32,?,?]
  %259 = ShapeOf(%258): // i64[4]
  %260 = GetPaddings(%259, const(i64[4] : {16L,32L,2L,2L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %261 = Conv2D(PadMode.Constant, %258, const(f32[16,32,2,2]), const(f32[16]), const(i32[2] : {1,1}), %260, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,16,?,?]
  %262 = LeakyRelu(%261, const(f32 : 0.3)): // f32[?,16,?,?]
  %263 = (%8, %262): // (f32[?,16,?,?], f32[?,16,?,?])
  
  %264 = Concat(%263, const(i32 : 1)): // f32[?,32,?,?]
  %265 = ShapeOf(%264): // i64[4]
  %266 = GetPaddings(%265, const(i64[4] : {16L,32L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %267 = Conv2D(PadMode.Constant, %264, const(f32[16,32,3,3]), const(f32[16]), const(i32[2] : {1,1}), %266, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,16,?,?]
  %268 = LeakyRelu(%267, const(f32 : 0.3)): // f32[?,16,?,?]
  %269 = ShapeOf(%268): // i64[4]
  %270 = GetPaddings(%269, const(i64[4] : {16L,16L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %271 = Conv2D(PadMode.Constant, %268, const(f32[16,16,3,3]), const(f32[16]), const(i32[2] : {1,1}), %270, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,16,?,?]
  %272 = LeakyRelu(%271, const(f32 : 0.3)): // f32[?,16,?,?]
  %273 = ShapeOf(%272): // i64[4]
  %274 = GetPaddings(%273, const(i64[4] : {2L,16L,3L,3L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : True), const(bool : False)): // i64[2,2]
  %275 = Conv2D(PadMode.Constant, %272, const(f32[2,16,3,3]), const(f32[2] : {0f,0f}), const(i32[2] : {1,1}), %274, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,2,?,?]
  %276 = LeakyRelu(%275, const(f32 : 0.3)): // f32[?,2,?,?]
  %277 = ShapeOf(%276): // i64[4]
  %278 = GetPaddings(%277, const(i64[4] : {1L,2L,1L,1L}), const(i32[2] : {1,1}), const(i32[2] : {1,1}), const(bool : False), const(bool : False)): // i64[2,2]
  %279 = Conv2D(PadMode.Constant, %276, const(f32[1,2,1,1] : {{{{-0.18535042f}},{{-1.2832744f}}}}), const(f32[1] : {0f}), const(i32[2] : {1,1}), %278, const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-∞f,∞f})): // f32[?,1,?,?]
  %280 = Tanh(UnaryOp.Tanh, %279): // f32[?,1,?,?]
  %281 = Transpose(%280, const(i32[4] : {0,2,3,1})): // f32[?,?,?,1]
}
